cleanup.add_default_serial_version_id=true
cleanup.add_generated_serial_version_id=false
cleanup.add_missing_annotations=true
cleanup.add_missing_deprecated_annotations=true
cleanup.add_missing_methods=false
cleanup.add_missing_nls_tags=false
cleanup.add_missing_override_annotations=true
cleanup.add_missing_override_annotations_interface_methods=true
cleanup.add_serial_version_id=true
cleanup.always_use_blocks=true
cleanup.always_use_parentheses_in_expressions=true
cleanup.always_use_this_for_non_static_field_access=false
cleanup.always_use_this_for_non_static_method_access=false
cleanup.convert_functional_interfaces=true
cleanup.convert_to_enhanced_for_loop=true
cleanup.correct_indentation=true
cleanup.format_source_code=true
cleanup.format_source_code_changes_only=false
cleanup.insert_inferred_type_arguments=false
cleanup.make_local_variable_final=false
cleanup.make_parameters_final=false
cleanup.make_private_fields_final=false
cleanup.make_type_abstract_if_missing_method=false
cleanup.make_variable_declarations_final=false
cleanup.never_use_blocks=false
cleanup.never_use_parentheses_in_expressions=false
cleanup.organize_imports=true
cleanup.qualify_static_field_accesses_with_declaring_class=false
cleanup.qualify_static_member_accesses_through_instances_with_declaring_class=true
cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class=true
cleanup.qualify_static_member_accesses_with_declaring_class=true
cleanup.qualify_static_method_accesses_with_declaring_class=false
cleanup.remove_private_constructors=true
cleanup.remove_redundant_type_arguments=true
cleanup.remove_trailing_whitespaces=true
cleanup.remove_trailing_whitespaces_all=true
cleanup.remove_trailing_whitespaces_ignore_empty=false
cleanup.remove_unnecessary_casts=true
cleanup.remove_unnecessary_nls_tags=true
cleanup.remove_unused_imports=true
cleanup.remove_unused_local_variables=true
cleanup.remove_unused_private_fields=true
cleanup.remove_unused_private_members=false
cleanup.remove_unused_private_methods=true
cleanup.remove_unused_private_types=true
cleanup.sort_members=true
cleanup.sort_members_all=false
cleanup.use_anonymous_class_creation=false
cleanup.use_blocks=true
cleanup.use_blocks_only_for_return_and_throw=false
cleanup.use_lambda=true
cleanup.use_parentheses_in_expressions=true
cleanup.use_this_for_non_static_field_access=true
cleanup.use_this_for_non_static_field_access_only_if_necessary=true
cleanup.use_this_for_non_static_method_access=true
cleanup.use_this_for_non_static_method_access_only_if_necessary=true
cleanup_profile=_InfinityRefactoring
cleanup_settings_version=2
content_assist_category_order=org.eclipse.jdt.ui.templateProposalCategory\:0\u0000org.eclipse.jdt.ui.swtProposalCategory\:65536\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\:2\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\:3\u0000org.eclipse.jdt.ui.textProposalCategory\:4\u0000org.eclipse.jdt.ui.javaAllProposalCategory\:5\u0000org.eclipse.jpt.jaxb.ui.jaxbCompletionProposals\:6\u0000org.eclipse.jpt.jpa.ui.jpaProposalCategory\:7\u0000org.eclipse.jst.ws.jaxws.ui.jaxwsProposalComputer\:8\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\:9\u0000org.eclipse.pde.api.tools.ui.apitools_proposal_category\:10\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\:11\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\:12\u0000org.eclipse.recommenders.completion.rcp.proposalCategory.intelligent\:13\u0000
content_assist_disabled_computers=org.eclipse.jdt.ui.swtProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000org.eclipse.recommenders.completion.rcp.proposalCategory.intelligent\u0000
content_assist_favorite_static_members=java.lang.Boolean.*;java.lang.Character.*;java.lang.Math.*;java.lang.Number.*;java.lang.Byte.*;java.lang.Double.*;java.lang.Float.*;java.lang.Integer.*;java.lang.Long.*;java.lang.Short.*;java.lang.Class.*;java.lang.String.*;java.lang.System.*;java.lang.Thread.*;java.util.Arrays.*;java.util.Base64.*;java.util.Calendar.*;java.util.GregorianCalendar.*;java.util.Collections.*;java.util.Locale.*;java.util.Objects.*;java.util.Currency.*;java.util.Date.*;java.util.ResourceBundle.*;java.nio.ByteBuffer.*;java.nio.MappedByteBuffer.*;java.nio.CharBuffer.*;java.nio.DoubleBuffer.*;java.nio.FloatBuffer.*;java.nio.IntBuffer.*;java.nio.LongBuffer.*;java.nio.ShortBuffer.*;java.time.Clock.*;java.util.stream.Collectors.*;java.text.SimpleDateFormat.*;java.text.DateFormat.*;java.text.MessageFormat.*;java.text.NumberFormat.*;java.time.Duration.*;java.time.Instant.*;java.time.LocalDate.*;java.time.LocalDateTime.*;java.time.LocalTime.*;java.time.MonthDay.*;java.time.OffsetDateTime.*;java.time.OffsetTime.*;java.time.Period.*;java.time.Year.*;java.time.YearMonth.*;java.time.ZonedDateTime.*;java.time.ZoneId.*;java.time.ZoneOffset.*;java.time.DayOfWeek.*;java.time.Month.*;java.security.MessageDigest.*;java.math.BigDecimal.*;java.math.BigInteger.*;java.nio.file.Paths.*;java.util.regex.Pattern.*;java.io.File.*;java.net.InetAddress.*;java.net.Inet4Address.*;java.net.Inet6Address.*;java.time.temporal.ChronoUnit.*;java.time.temporal.ChronoField.*;java.time.temporal.IsoFields.*;java.time.temporal.JulianFields.*;java.time.temporal.TemporalAdjusters.*;java.time.temporal.TemporalQueries.*;java.time.temporal.ValueRange.*;java.time.temporal.WeekFields.*;java.net.URI.*;java.util.TimeZone.*;java.util.SimpleTimeZone.*;java.nio.channels.Channels.*;java.nio.file.Files.*;java.nio.file.FileSystems.*;java.nio.file.AccessMode.*;java.nio.file.LinkOption.*;java.nio.file.StandardCopyOption.*;java.nio.file.StandardOpenOption.*;java.nio.file.FileVisitOption.*;java.nio.file.FileVisitResult.*;java.util.concurrent.TimeUnit.*;java.util.concurrent.Executors.*;java.util.concurrent.ForkJoinTask.*;java.util.concurrent.ThreadLocalRandom.*;java.util.concurrent.ForkJoinPool.*;java.time.zone.ZoneOffsetTransition.*;java.time.zone.ZoneOffsetTransitionRule.*;java.time.zone.ZoneRules.*;java.time.zone.ZoneRulesProvider.*;java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.*;java.util.stream.Collector.Characteristics.*;java.util.stream.DoubleStream.*;java.util.stream.IntStream.*;java.util.stream.LongStream.*;java.lang.annotation.ElementType.*;java.lang.annotation.RetentionPolicy.*;java.nio.charset.StandardCharsets.*;java.time.chrono.IsoEra.*;java.time.chrono.MinguoEra.*;java.time.chrono.HijrahEra.*;java.time.chrono.ThaiBuddhistEra.*;java.time.chrono.ChronoPeriod.*;java.time.chrono.Chronology.*;java.util.logging.Logger.*;java.util.logging.Level.*;java.time.format.DateTimeFormatter.*;java.time.format.DateTimeFormatterBuilder.*;java.time.format.DecimalStyle.*;java.time.format.ResolverStyle.*;java.time.format.TextStyle.*;java.time.format.SignStyle.*;java.time.format.FormatStyle.*;java.nio.charset.Charset.*;java.lang.System.in;java.lang.System.out;java.lang.System.err;java.util.function.Function.identity;java.util.function.UnaryOperator.identity;java.util.function.Predicate.isEqual;java.util.stream.Stream.builder;java.util.stream.Stream.concat;java.util.stream.Stream.empty;java.util.stream.Stream.generate;java.util.stream.Stream.iterate;java.util.stream.Stream.of;java.util.Optional.empty;java.util.Optional.of;java.util.Optional.ofNullable;java.lang.ThreadLocal.withInitial;java.util.Comparator.comparing;java.util.Comparator.comparingDouble;java.util.Comparator.comparingInt;java.util.Comparator.comparingLong;java.util.Comparator.naturalOrder;java.util.Comparator.nullsFirst;java.util.Comparator.nullsLast;java.util.Comparator.reverseOrder;java.util.EnumSet.allOf;java.util.EnumSet.complementOf;java.util.EnumSet.copyOf;java.util.EnumSet.noneOf;java.util.EnumSet.of;java.util.EnumSet.range;java.util.stream.Collector.of;java.util.OptionalDouble.*;java.util.OptionalInt.*;java.util.OptionalLong.*;java.lang.Enum.valueOf;java.sql.Timestamp.*;java.sql.Date.*;java.sql.Time.*
content_assist_number_of_computers=24
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
editor_save_participant_org.eclipse.jdt.ui.postsavelistener.cleanup=true
formatter_profile=_InfinityRefactoring
formatter_settings_version=13
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.cleanupprofiles=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<profiles version\="2">\n<profile kind\="CleanUpProfile" name\="InfinityRefactoring" version\="2">\n<setting id\="cleanup.qualify_static_method_accesses_with_declaring_class" value\="false"/>\n<setting id\="cleanup.always_use_this_for_non_static_method_access" value\="false"/>\n<setting id\="cleanup.organize_imports" value\="true"/>\n<setting id\="cleanup.remove_trailing_whitespaces_ignore_empty" value\="false"/>\n<setting id\="cleanup.format_source_code_changes_only" value\="false"/>\n<setting id\="cleanup.qualify_static_field_accesses_with_declaring_class" value\="false"/>\n<setting id\="cleanup.add_generated_serial_version_id" value\="false"/>\n<setting id\="cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class" value\="true"/>\n<setting id\="cleanup.remove_redundant_type_arguments" value\="true"/>\n<setting id\="cleanup.remove_unused_imports" value\="true"/>\n<setting id\="cleanup.insert_inferred_type_arguments" value\="false"/>\n<setting id\="cleanup.make_private_fields_final" value\="false"/>\n<setting id\="cleanup.use_lambda" value\="true"/>\n<setting id\="cleanup.always_use_blocks" value\="true"/>\n<setting id\="cleanup.use_this_for_non_static_field_access_only_if_necessary" value\="true"/>\n<setting id\="cleanup.sort_members_all" value\="false"/>\n<setting id\="cleanup.remove_trailing_whitespaces_all" value\="true"/>\n<setting id\="cleanup.add_missing_annotations" value\="true"/>\n<setting id\="cleanup.always_use_this_for_non_static_field_access" value\="false"/>\n<setting id\="cleanup.make_parameters_final" value\="false"/>\n<setting id\="cleanup.sort_members" value\="true"/>\n<setting id\="cleanup.remove_private_constructors" value\="true"/>\n<setting id\="cleanup.always_use_parentheses_in_expressions" value\="true"/>\n<setting id\="cleanup.remove_unused_local_variables" value\="true"/>\n<setting id\="cleanup.convert_to_enhanced_for_loop" value\="true"/>\n<setting id\="cleanup.remove_unused_private_fields" value\="true"/>\n<setting id\="cleanup.never_use_blocks" value\="false"/>\n<setting id\="cleanup.add_missing_deprecated_annotations" value\="true"/>\n<setting id\="cleanup.use_this_for_non_static_field_access" value\="true"/>\n<setting id\="cleanup.remove_unnecessary_nls_tags" value\="true"/>\n<setting id\="cleanup.qualify_static_member_accesses_through_instances_with_declaring_class" value\="true"/>\n<setting id\="cleanup.add_missing_nls_tags" value\="false"/>\n<setting id\="cleanup.remove_unnecessary_casts" value\="true"/>\n<setting id\="cleanup.use_blocks_only_for_return_and_throw" value\="false"/>\n<setting id\="cleanup.format_source_code" value\="true"/>\n<setting id\="cleanup.convert_functional_interfaces" value\="true"/>\n<setting id\="cleanup.add_default_serial_version_id" value\="true"/>\n<setting id\="cleanup.remove_unused_private_methods" value\="true"/>\n<setting id\="cleanup.remove_trailing_whitespaces" value\="true"/>\n<setting id\="cleanup.make_type_abstract_if_missing_method" value\="false"/>\n<setting id\="cleanup.add_serial_version_id" value\="true"/>\n<setting id\="cleanup.use_this_for_non_static_method_access" value\="true"/>\n<setting id\="cleanup.use_this_for_non_static_method_access_only_if_necessary" value\="true"/>\n<setting id\="cleanup.use_anonymous_class_creation" value\="false"/>\n<setting id\="cleanup.add_missing_override_annotations_interface_methods" value\="true"/>\n<setting id\="cleanup.remove_unused_private_members" value\="false"/>\n<setting id\="cleanup.make_local_variable_final" value\="false"/>\n<setting id\="cleanup.add_missing_methods" value\="false"/>\n<setting id\="cleanup.never_use_parentheses_in_expressions" value\="false"/>\n<setting id\="cleanup.qualify_static_member_accesses_with_declaring_class" value\="true"/>\n<setting id\="cleanup.use_parentheses_in_expressions" value\="true"/>\n<setting id\="cleanup.add_missing_override_annotations" value\="true"/>\n<setting id\="cleanup.use_blocks" value\="true"/>\n<setting id\="cleanup.make_variable_declarations_final" value\="false"/>\n<setting id\="cleanup.correct_indentation" value\="true"/>\n<setting id\="cleanup.remove_unused_private_types" value\="true"/>\n</profile>\n</profiles>\n
org.eclipse.jdt.ui.enable.visibility.order=true
org.eclipse.jdt.ui.exception.name=ex
org.eclipse.jdt.ui.formatterprofiles=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<profiles version\="13">\n<profile kind\="CodeFormatterProfile" name\="InfinityRefactoring" version\="13">\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_ellipsis" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_after_imports" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.format_javadoc_comments" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.indentation.size" value\="8"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.disabling_tag" value\="@formatter\:off"/>\n<setting id\="org.eclipse.jdt.core.formatter.continuation_indentation" value\="2"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_enum_constants" value\="49"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_imports" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_after_package" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_binary_operator" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.indent_root_tags" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.enabling_tag" value\="@formatter\:on"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column" value\="false"/>\n<setting id\="org.eclipse.jdt.core.compiler.problem.enumIdentifier" value\="error"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_statements_compare_to_block" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.line_length" value\="150"/>\n<setting id\="org.eclipse.jdt.core.formatter.use_on_off_tags" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_method_declaration" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_binary_expression" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_block" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_lambda_body" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.compact_else_if" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_type_parameters" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration" value\="16"/>\n<setting id\="org.eclipse.jdt.core.compiler.problem.assertIdentifier" value\="error"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_binary_operator" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_unary_operator" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_ellipsis" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.format_line_comments" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.align_type_members_on_columns" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_assignment" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_module_statements" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_conditional_expression" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_block_in_case" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.format_header" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode" value\="enabled"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_method_declaration" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.join_wrapped_lines" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.wrap_before_conditional_operator" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines" value\="2147483647"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_resources_in_try" value\="80"/>\n<setting id\="org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column" value\="false"/>\n<setting id\="org.eclipse.jdt.core.compiler.source" value\="9"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.tabulation.size" value\="4"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.format_source_code" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_field" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer" value\="2"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_method" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.wrap_before_assignment_operator" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.compiler.codegen.targetPlatform" value\="9"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_switch" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.format_html" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_compact_if" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_empty_lines" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_type_arguments" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_unary_operator" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_label" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_member_type" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.format_block_comments" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_statements_compare_to_body" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_multiple_fields" value\="16"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_array_initializer" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.wrap_before_binary_operator" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.compiler.compliance" value\="9"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration" value\="common_lines"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_enum_constant" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.brace_position_for_type_declaration" value\="end_of_line"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_before_package" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header" value\="0"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.join_lines_in_comments" value\="false"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional" value\="insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.comment.indent_parameter_description" value\="true"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.tabulation.char" value\="tab"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.blank_lines_between_import_groups" value\="1"/>\n<setting id\="org.eclipse.jdt.core.formatter.lineSplit" value\="200"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation" value\="do not insert"/>\n<setting id\="org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch" value\="insert"/>\n</profile>\n</profiles>\n
org.eclipse.jdt.ui.formatterprofiles.version=13
org.eclipse.jdt.ui.gettersetter.use.is=true
org.eclipse.jdt.ui.ignorelowercasenames=true
org.eclipse.jdt.ui.importorder=java;javax;org;com;
org.eclipse.jdt.ui.javadoc=true
org.eclipse.jdt.ui.ondemandthreshold=99
org.eclipse.jdt.ui.overrideannotation=true
org.eclipse.jdt.ui.staticondemandthreshold=99
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="gettercomment_context" deleted\="false" description\="Comment for getter method" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.gettercomment" name\="gettercomment">/**\n * @return The ${bare_field_name}.\n */</template><template autoinsert\="false" context\="settercomment_context" deleted\="false" description\="Comment for setter method" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.settercomment" name\="settercomment">/**\n * Sets the ${bare_field_name}.\n * @param ${param} The new value to set.\n */</template><template autoinsert\="false" context\="constructorcomment_context" deleted\="false" description\="Comment for created constructors" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.constructorcomment" name\="constructorcomment">/**\n * Constructs a new instance of ${enclosing_type}.\n * ${tags}\n */</template><template autoinsert\="false" context\="filecomment_context" deleted\="false" description\="Comment for created Java files" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.filecomment" name\="filecomment"/><template autoinsert\="false" context\="typecomment_context" deleted\="false" description\="Comment for created types" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.typecomment" name\="typecomment">/**\n * ${tags}\n * @author ${name\:git_config(user.name)}\n */</template><template autoinsert\="false" context\="fieldcomment_context" deleted\="false" description\="Comment for fields" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.fieldcomment" name\="fieldcomment"/><template autoinsert\="false" context\="overridecomment_context" deleted\="false" description\="Comment for overriding methods" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.overridecomment" name\="overridecomment"/><template autoinsert\="false" context\="delegatecomment_context" deleted\="false" description\="Comment for delegate methods" enabled\="true" id\="org.eclipse.jdt.ui.text.codetemplates.delegatecomment" name\="delegatecomment">/**\n * ${tags}\n * ${see_to_target}\n */</template></templates>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java-statements" deleted\="false" description\="iterate over array" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_array" name\="for">for (int ${index} \= 0; ${index} &lt; ${array}.length; ${index}++) {\n\t${line_selection}${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="iterate over array with temporary variable" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_temp" name\="for">for (int ${index} \= 0; ${index} &lt; ${array}.length; ${index}++) {\n\t${array_type} ${array_element} \= ${array}[${index}];\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="iterate over collection" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_collection" name\="for">for (${iteratorType\:newType(java.util.Iterator)} ${iterator} \= ${collection}.iterator(); ${iterator}.hasNext(); ) {\n\t${type\:elemType(collection)} ${name\:newName(type)} \= (${type}) ${iterator}.next();\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="iterate over an array or Iterable" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_iterable" name\="foreach">for (${iterable_type} ${iterable_element} \: ${iterable}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="iterate with enumeration" enabled\="true" id\="org.eclipse.jdt.ui.templates.while_enumeration" name\="while">while (${en\:var(java.util.Enumeration)}.hasMoreElements()) {\n\t${type\:argType(en)} ${elem\:newName(type)} \= (${type}) ${en}.nextElement();\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="iterate with iterator" enabled\="true" id\="org.eclipse.jdt.ui.templates.while_iterator" name\="while">while (${it\:var(java.util.Iterator)}.hasNext()) {\n\t${type\:argType(it)} ${elem\:newName(type)} \= (${type}) ${it}.next();\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="do while statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.do" name\="do">do {\n\t${line_selection}${cursor}\n} while (${condition\:var(boolean)});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="switch case statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.switch" name\="switch">switch (${key}) {\n\tcase ${value}\:\n\t\t${cursor}\n\t\tbreak;\n\n\tdefault\:\n\t\tbreak;\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="if statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.if" name\="if">if (${condition\:var(boolean)}) {\n\t${line_selection}${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="if else statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.ifelse" name\="ifelse">if (${condition\:var(boolean)}) {\n\t${cursor}\n} else {\n\t\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="else if block" enabled\="true" id\="org.eclipse.jdt.ui.templates.elseif" name\="elseif">else if (${condition\:var(boolean)}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="else block" enabled\="true" id\="org.eclipse.jdt.ui.templates.else" name\="else">else {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="if statement checking for null" enabled\="true" id\="org.eclipse.jdt.ui.templates.ifnull" name\="ifn">if (${name\:var} \=\= null) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="if statement checking for not null" enabled\="true" id\="org.eclipse.jdt.ui.templates.ifnotnull" name\="ifNotNull">if (${name\:var} \!\= null) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="public method" enabled\="true" id\="org.eclipse.jdt.ui.templates.public_method" name\="Pm">public ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character,Object)} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="public static method" enabled\="true" id\="org.eclipse.jdt.ui.templates.public_static_method" name\="Psm">public static ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character,Object)} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="protected method" enabled\="true" id\="org.eclipse.jdt.ui.templates.protected_method" name\="pem">protected ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character,Object)} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private method" enabled\="true" id\="org.eclipse.jdt.ui.templates.private_method" name\="pm">private ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character,Object)} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private static method" enabled\="true" id\="org.eclipse.jdt.ui.templates.private_static_method" name\="psm">private static ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character,Object)} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="create new object" enabled\="true" id\="org.eclipse.jdt.ui.templates.new" name\="n">${type} ${name} \= new ${type}(${});</template><template autoinsert\="true" context\="java" deleted\="false" description\="convert collection to array" enabled\="true" id\="org.eclipse.jdt.ui.templates.toarray" name\="toarray">(${type\:elemType(collection)}[]) ${collection}.toArray(new ${type}[${collection}.size()])</template><template autoinsert\="true" context\="java-statements" deleted\="true" description\="print to standard out" enabled\="true" id\="org.eclipse.jdt.ui.templates.sysout" name\="sysout">System.out.println(${word_selection}${});${cursor}</template><template autoinsert\="true" context\="java-statements" deleted\="true" description\="print to standard error" enabled\="true" id\="org.eclipse.jdt.ui.templates.syserr" name\="syserr">System.err.println(${word_selection}${});${cursor}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;code&gt;&lt;/code&gt;" enabled\="true" id\="org.eclipse.jdt.ui.templates.code_tag" name\="code">&lt;code&gt;${word_selection}${}&lt;/code&gt;${cursor}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;pre&gt;&lt;/pre&gt;" enabled\="true" id\="org.eclipse.jdt.ui.templates.pre_tag" name\="pre">&lt;pre&gt;${word_selection}${}&lt;/pre&gt;${cursor}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;b&gt;&lt;/b&gt;" enabled\="true" id\="org.eclipse.jdt.ui.templates.b_tag" name\="b">&lt;b&gt;${word_selection}${}&lt;/b&gt;${cursor}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;i&gt;&lt;/i&gt;" enabled\="true" id\="org.eclipse.jdt.ui.templates.i_tag" name\="i">&lt;i&gt;${word_selection}${}&lt;/i&gt;${cursor}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="author name" enabled\="true" id\="org.eclipse.jdt.ui.templates.author" name\="@a">@author ${user}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="test method (JUnit 4)" enabled\="true" id\="org.eclipse.jdt.ui.templates.test_junit4" name\="test">@${testType\:newType(org.junit.Test)}\npublic void ${testName}() throws Exception {\n\t${staticImport\:importStatic('org.junit.Assert.*')}${cursor}\n}</template><template autoinsert\="false" context\="java-members" deleted\="true" description\="test method (JUnit 5)" enabled\="true" id\="org.eclipse.jdt.ui.templates.test_junit5" name\="test_jupiter">@${testType\:newType(org.junit.jupiter.api.Test)}\nvoid ${testName}() throws Exception {\n\t${staticImport\:importStatic('org.junit.jupiter.api.Assertions.*')}${cursor}\n}</template><template autoinsert\="false" context\="java-members" deleted\="true" description\="test factory method (JUnit Jupiter)" enabled\="true" id\="org.eclipse.jdt.ui.templates.testfactory_junit5" name\="test_factory">@${testfactoryType\:newType(org.junit.jupiter.api.TestFactory)}\n${returnType\:link('Stream&lt;DynamicNode&gt;', 'Collection&lt;DynamicNode&gt;', 'Iterable&lt;DynamicNode&gt;', 'Iterator&lt;DynamicNode&gt;')} ${testFactoryName}() throws Exception {\n\t// ${todo}\: generate dynamic test cases\n\t${cursor}return null;${typeImports\:import('org.junit.jupiter.api.DynamicNode')}${staticImports\:importStatic('org.junit.jupiter.api.Assertions.*', 'org.junit.jupiter.api.DynamicContainer.*', 'org.junit.jupiter.api.DynamicTest.*')}\n}</template><template autoinsert\="false" context\="java-members" deleted\="false" description\="static final field" enabled\="true" id\="org.eclipse.jdt.ui.templates.static_final" name\="sf">${visibility\:link('public ','protected ','private ','')}static final ${type\:link(String,int,long,double,float,short,byte,boolean,char)} ${NAME} \= ${expr\:link('""',0,0L,0D,0F,'false','\\u000')};</template><template autoinsert\="false" context\="swt-statements" deleted\="false" description\="new Browser" enabled\="false" id\="org.eclipse.jdt.ui.text.codetemplates.swt.browser" name\="Browser">${browserType\:newType(org.eclipse.swt.browser.Browser)} ${browser\:newName(org.eclipse.swt.browser.Browser)}\= new ${browserType}(${parent\:var(org.eclipse.swt.widgets.Composite)}, ${style\:link(SWT.NONE, SWT.MOZILLA)});\n${browser}.setLayoutData(new ${gridDataType\:newType(org.eclipse.swt.layout.GridData)}(SWT.${horizontal\:link(FILL, BEGINNING, CENTER, END)}, SWT.${vertical\:link(FILL, TOP, CENTER, BOTTOM)}, ${hex\:link(true, false)}, ${vex\:link(true, false)}));\n${browser}.setUrl(${word_selection}${});\n${imp\:import(org.eclipse.swt.SWT)}${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="abstract" enabled\="true" name\="ab">abstract</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="access modifier" enabled\="true" name\="am">${modifier\:link(public,protected,private, '')}</template><template autoinsert\="true" context\="java" deleted\="false" description\="and" enabled\="true" name\="and">&amp;&amp; (${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="boolean" enabled\="true" name\="b">boolean</template><template autoinsert\="true" context\="java" deleted\="false" description\="Boolean" enabled\="true" name\="B">Boolean</template><template autoinsert\="true" context\="java" deleted\="false" description\="BigDecimal" enabled\="true" name\="Bd">BigDecimal</template><template autoinsert\="true" context\="java" deleted\="false" description\="break" enabled\="true" name\="br">break;</template><template autoinsert\="true" context\="java" deleted\="false" description\="byte" enabled\="true" name\="by">byte</template><template autoinsert\="true" context\="java" deleted\="false" description\="Byte" enabled\="true" name\="By">Byte</template><template autoinsert\="true" context\="java" deleted\="false" description\="char" enabled\="true" name\="c">char</template><template autoinsert\="true" context\="java" deleted\="false" description\="Character" enabled\="true" name\="C">Character</template><template autoinsert\="true" context\="java" deleted\="false" description\="Collection" enabled\="true" name\="co">Collection&lt;${returnType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt;</template><template autoinsert\="true" context\="java" deleted\="false" description\="double" enabled\="true" name\="d">double</template><template autoinsert\="true" context\="java" deleted\="false" description\="Double" enabled\="true" name\="D">Double</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="declare abstract method" enabled\="true" name\="dam">${accessModifier\:link(public,protected,'')} abstract ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character,Object)} ${name}(${});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare boolean variable" enabled\="true" name\="db">boolean ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize boolean variable" enabled\="true" name\="db">boolean ${newName} \= ${expr\:link('false','true')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Boolean variable" enabled\="true" name\="Db">Boolean ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Boolean variable" enabled\="true" name\="Db">Boolean ${newName} \= ${expr\:link('false','true','null')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare BigDecimal variable" enabled\="true" name\="dBd">BigDecimal ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize BigDecimal" enabled\="true" name\="dBd">BigDecimal ${newName} \= new BigDecimal("${cursor}");</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare byte variable" enabled\="true" name\="dby">byte ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize byte variable" enabled\="true" name\="dby">byte ${newName} \= ${expr\:link('-1','0','1')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Byte variable" enabled\="true" name\="Dby">Byte ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Byte variable" enabled\="true" name\="Dby">Byte ${newName} \= ${expr\:link('null','-1','0','1')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare char variable" enabled\="true" name\="dc">char ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize char variable" enabled\="true" name\="dc">char ${newName} \= ${cursor};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Character variable" enabled\="true" name\="Dc">Character ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Character variable" enabled\="true" name\="Dc">Character ${newName} \= ${expr\:link('null')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="Declare Collection" enabled\="true" name\="Dco">Collection&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Collection" enabled\="true" name\="Dco">Collection&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName} \= ${expr\:link('null','new ArrayList&lt;&gt;()','new HashSet&lt;&gt;()','new LinkedList&lt;&gt;()', 'new TreeSet&lt;&gt;()')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare double variable" enabled\="true" name\="dd">double ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize double variable" enabled\="true" name\="dd">double ${newName} \= ${expr\:link('-1D','0D','1D')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Double variable" enabled\="true" name\="Dd">Double ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Double variable" enabled\="true" name\="Dd">Double ${newName} \= ${expr\:link('null','-1D','0D','1D')};</template><template autoinsert\="true" context\="java" deleted\="false" description\="default" enabled\="true" name\="def">default</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="Thom\u00E1s Sousa Silva" enabled\="true" name\="dev">Thom\u00E1s Sousa Silva</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare float variable" enabled\="true" name\="df">float ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize float variable" enabled\="true" name\="df">float ${newName} \= ${expr\:link('-1F','0F','1F')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Float variable" enabled\="true" name\="Df">Float ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Float variable" enabled\="true" name\="Df">Float ${newName} \= ${expr\:link('null','-1F','0F','1F')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare int variable" enabled\="true" name\="di">int ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize int variable" enabled\="true" name\="di">int ${newName} \= ${expr\:link('-1','0','1')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Integer variable" enabled\="true" name\="Di">Integer ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Integer variable" enabled\="true" name\="Di">Integer ${newName} \= ${expr\:link('null','-1','0','1')};</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;div&gt;&lt;/div&gt;" enabled\="true" name\="div">&lt;div&gt;${cursor}&lt;/div&gt;</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare long variable" enabled\="true" name\="dl">long ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize long variable" enabled\="true" name\="dl">long ${newName} \= ${expr\:link('-1','0','1')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Long variable" enabled\="true" name\="Dl">Long ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Long variable" enabled\="true" name\="Dl">Long ${newName} \= ${expr\:link('null','-1','0','1')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare List" enabled\="true" name\="Dli">List&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize List" enabled\="true" name\="Dli">List&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName} \= ${expr\:link('null','new ArrayList&lt;&gt;()','new LinkedList&lt;&gt;()')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Map" enabled\="true" name\="Dm">Map&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Map" enabled\="true" name\="Dm">Map&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName} \= ${expr\:link('null','new HashMap&lt;&gt;()','new TreeMap&lt;&gt;()', 'new EnumMap&lt;&gt;()','new WeakHashMap&lt;&gt;()', 'new LinkedHashMap&lt;&gt;()','new ConcurrentHashMap&lt;&gt;()')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare NavigableMap" enabled\="true" name\="Dnm">NavigableMap&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize NavigableMap" enabled\="true" name\="Dnm">NavigableMap&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName} \= ${expr\:link('null','new TreeMap&lt;&gt;()','new ConcurrentSkipListMap&lt;&gt;()')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare NavigableSet" enabled\="true" name\="Dnse">NavigableSet&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character, Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize NavigableSet" enabled\="true" name\="Dnse">NavigableSet&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName} \= ${expr\:link('null','new TreeSet&lt;&gt;()', 'new ConcurrentSkipListSet&lt;&gt;()')};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="declare method" enabled\="true" name\="dpm">public ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character,Object)} ${name}(${});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare String variable" enabled\="true" name\="dS">String ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize short variable" enabled\="true" name\="DS">String ${newName} \= ${expr\:link('null','""')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Set" enabled\="true" name\="Dse">Set&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character, Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize Set" enabled\="true" name\="Dse">Set&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName} \= ${expr\:link('null','new HashSet&lt;&gt;()','new LinkedHashSet&lt;&gt;()','new TreeSet&lt;&gt;()', 'EnumSet.')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare short variable" enabled\="true" name\="dsh">short ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize short variable" enabled\="true" name\="dsh">short ${newName} \= ${expr\:link('-1','0','1')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare Short variable" enabled\="true" name\="Dsh">Short ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize short variable" enabled\="true" name\="Dsh">Short ${newName} \= ${expr\:link('null','-1','0','1')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare SortedMap" enabled\="true" name\="Dsm">SortedMap&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize SortedMap" enabled\="true" name\="Dsm">SortedMap&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName} \= ${expr\:link('null','new TreeMap&lt;&gt;()','new ConcurrentSkipListMap&lt;&gt;()')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare SortedSet" enabled\="true" name\="Dsse">SortedSet&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character, Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="declare and initialize SortedSet" enabled\="true" name\="Dsse">SortedSet&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName} \= ${expr\:link('null','new TreeSet&lt;&gt;()', 'new ConcurrentSkipListSet&lt;&gt;()')};</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="initialize variable" enabled\="true" name\="e">\= ${cursor};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="enum" enabled\="true" name\="e">${visibility\:link('public ','protected ','private ','')}enum ${newName} {\n\n\t${cursor}\n\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="initialize variable" enabled\="true" name\="E">\= new ${elemType}(${argType});</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="Enum Converter" enabled\="true" name\="ec">@Converter(autoApply \= true)\npublic static class ${enclosing_type}Converter extends EnumConverter&lt;${enclosing_type}&gt; {\n\n\tpublic ${enclosing_type}Converter() {\n\t\tsuper(${enclosing_type}.class);\n\t}\n\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="Empty constructor" enabled\="true" name\="ec">${visibility\:link('public ','protected ','private ','')} ${enclosing_type}() {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="initialize generic variable" enabled\="true" name\="Eg">\= new ${elemType}&lt;&gt;(${argType});</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="equals + hashCode method" enabled\="true" name\="eh">@Override\npublic int hashCode() {\n\treturn Objects.hashCode(id);\n}\n\n@Override\npublic boolean equals(Object obj) {\n    return ((obj instanceof ${enclosing_type}) &amp;&amp; Objects.equals(this.id, ((${enclosing_type}) obj).id));\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="equals + hashCode method" enabled\="true" name\="eh">@Override\npublic int hashCode() {\n\treturn Identifiable.hashCode(this);\n}\n\n@Override\npublic boolean equals(Object obj) {\n\treturn Identifiable.equals(${enclosing_type}.class, this, obj);\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="extra modifier" enabled\="true" name\="em">${modifier\:link(static,final,synchronized,volatile,'')}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="equals template method" enabled\="true" name\="eq">return ((${localVar} instanceof ${enclosing_type}) &amp;&amp; Objects.equals(this.id, ((${enclosing_type}) ${localVar}).id));</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="equals method" enabled\="true" name\="eq">@Override\npublic boolean equals(Object obj) {\n\treturn ((obj instanceof ${enclosing_type}) &amp;&amp; Objects.equals(this.id, ((${enclosing_type}) obj).id));\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="equals template method" enabled\="true" name\="eq">return Identifiable.equals(${enclosing_type}.class, this, obj);</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="equals method" enabled\="true" name\="eq">@Override\npublic boolean equals(Object obj) {\n\treturn Identifiable.equals(${enclosing_type}.class, this, obj);\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="extends" enabled\="true" name\="ex">extends</template><template autoinsert\="true" context\="java" deleted\="false" description\="Exception" enabled\="true" name\="Ex">Exception</template><template autoinsert\="true" context\="java" deleted\="false" description\="float" enabled\="true" name\="f">float</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="false" enabled\="true" name\="f">false</template><template autoinsert\="true" context\="java" deleted\="false" description\="Float" enabled\="true" name\="F">Float</template><template autoinsert\="true" context\="java" deleted\="false" description\="final" enabled\="true" name\="fi">final</template><template autoinsert\="true" context\="java" deleted\="false" description\="iterate over sequence" enabled\="true" name\="for">for (int ${index} \= 0; ${index} &lt; ${localVar}; ${index}++) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="hashCode method" enabled\="true" name\="hc">@Override\npublic int hashCode() {\n\treturn Objects.hashCode(id);\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="hashCode method" enabled\="true" name\="hc">return Objects.hashcode(id);</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="hashCode  method" enabled\="true" name\="hc">@Override\npublic int hashCode() {\n\treturn Identifiable.hashCode(this);\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="hashCode method" enabled\="true" name\="hc">return Identifiable.hashCode(this);</template><template autoinsert\="true" context\="java" deleted\="false" description\="int" enabled\="true" name\="i">int</template><template autoinsert\="true" context\="java" deleted\="false" description\="Integer" enabled\="true" name\="I">Integer</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="if instanceof" enabled\="true" name\="ifinst">if (${localVar} instanceof ${argType}) {\n\t${argType} ${newName} \= ((${argType}) ${localVar});\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="ternary if null or empty" enabled\="true" name\="ifnet">(((${localVar} \=\= null) || ${localVar}.isEmpty()) ? null \: ${cursor})</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="if null then new" enabled\="true" name\="ifnn">if (${localVar} \=\= null) {\n\t${localVar} \= new ${cursor}();\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="ternary if null" enabled\="true" name\="ifnt">((${localVar} \=\= null)? null \: ${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="ternary if" enabled\="true" name\="ift">((${cursor}) ? \: )</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="implements" enabled\="true" name\="imp">implements</template><template autoinsert\="true" context\="java" deleted\="false" description\="is different" enabled\="true" name\="isd">(${localVar} \!\= ${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="is different" enabled\="true" name\="isD">(\!${localVar}.equals(${cursor}))</template><template autoinsert\="true" context\="java" deleted\="false" description\="is equals" enabled\="true" name\="ise">(${localVar} \=\= ${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="is empty" enabled\="true" name\="ise">${localVar}.isEmpty()</template><template autoinsert\="true" context\="java" deleted\="false" description\="is equals" enabled\="true" name\="isE">${localVar}.equals(${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="is great" enabled\="true" name\="isg">(${localVar} &gt; ${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="is great" enabled\="true" name\="isG">(${localVar}.compareTo(${cursor}) &gt; 0)</template><template autoinsert\="true" context\="java" deleted\="false" description\="is great or equal" enabled\="true" name\="isge">(${localVar} &gt;\= ${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="is great or equal" enabled\="true" name\="isGe">(${localVar}.compareTo(${cursor}) &gt;\= 0)</template><template autoinsert\="true" context\="java" deleted\="false" description\="instanceof" enabled\="true" name\="isi">(${localVar} instanceof ${argType})</template><template autoinsert\="true" context\="java" deleted\="false" description\="is less" enabled\="true" name\="isl">(${localVar} &lt; ${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="is less" enabled\="true" name\="isL">(${localVar}.compareTo(${cursor}) &lt; 0)</template><template autoinsert\="true" context\="java" deleted\="false" description\="is less or equal" enabled\="true" name\="isle">(${localVar} &lt;\= ${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="is less or equal" enabled\="true" name\="isLe">(${localVar}.compareTo(${cursor}) &lt;\= 0)</template><template autoinsert\="true" context\="java" deleted\="false" description\="is null" enabled\="true" name\="isn">(${localVar} \=\= null)</template><template autoinsert\="true" context\="java" deleted\="false" description\="is null or empty" enabled\="true" name\="isne">((${localVar} \=\= null) || ${localVar}.isEmpty())</template><template autoinsert\="true" context\="java" deleted\="false" description\="is not empty" enabled\="true" name\="isne">(\!${localVar}.isEmpty())</template><template autoinsert\="true" context\="java" deleted\="false" description\="is not null" enabled\="true" name\="isnn">(${localVar} \!\= null)</template><template autoinsert\="true" context\="java" deleted\="false" description\="is not null and empty" enabled\="true" name\="isnne">((${localVar} \!\= null) &amp;&amp; \!${localVar}.isEmpty())</template><template autoinsert\="true" context\="java" deleted\="false" description\="long" enabled\="true" name\="l">long</template><template autoinsert\="true" context\="java" deleted\="false" description\="Long" enabled\="true" name\="L">Long</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l0">() -&gt; {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l0s">() -&gt; ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l1">${newName} -&gt; {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l1s">${newName} -&gt; ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l2">(${newName1}, ${newName2}) -&gt; {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l2s">(${newName1}, ${newName2}) -&gt; ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l3">(${newName1}, ${newName2}, ${newName3}) -&gt; {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l3s">(${newName1}, ${newName2}, ${newName3}) -&gt; ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l4">(${newName1}, ${newName2}, ${newName3}, ${newName4}) -&gt; {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l4s">(${newName1}, ${newName2}, ${newName3}, ${newName4}) -&gt; ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l5">(${newName1}, ${newName2}, ${newName3}, ${newName4}, ${newName5}) -&gt; {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="lambda" enabled\="true" name\="l5s">(${newName1}, ${newName2}, ${newName3}, ${newName4}, ${newName5}) -&gt; ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="List" enabled\="true" name\="li">List&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character, Object,'?','? extends ','? super ')}&gt;</template><template autoinsert\="true" context\="java" deleted\="false" description\="Map" enabled\="true" name\="m">Map&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt;</template><template autoinsert\="true" context\="java" deleted\="false" description\="null" enabled\="true" name\="n">null</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="new empty constructor" enabled\="true" name\="nc">public ${enclosing_type}() {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="new Collection" enabled\="true" name\="nco">${expr\:link('new ArrayList&lt;&gt;()','new HashSet&lt;&gt;()','new LinkedList&lt;&gt;()', 'new TreeSet&lt;&gt;()')};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private constructor" enabled\="true" name\="ni">/**\n * @throws AssertionError All times that it is called.\n */\nprivate ${enclosing_type}() {\n\tthrow new AssertionError("No ${enclosing_type} instances for you\!");\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="new List" enabled\="true" name\="nli">${expr\:link('new ArrayList&lt;&gt;()','new LinkedList&lt;&gt;()')};</template><template autoinsert\="true" context\="java" deleted\="false" description\="NavigableMap" enabled\="true" name\="nm">NavigableMap&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt;</template><template autoinsert\="true" context\="java" deleted\="false" description\="new Map" enabled\="true" name\="nm">${expr\:link('new HashMap&lt;&gt;()','new TreeMap&lt;&gt;()', 'new EnumMap&lt;&gt;()','new WeakHashMap&lt;&gt;()', 'new LinkedHashMap&lt;&gt;()','new ConcurrentHashMap&lt;&gt;()')};</template><template autoinsert\="true" context\="java" deleted\="false" description\="new NavigableMap" enabled\="true" name\="nnm">${expr\:link('new TreeMap&lt;&gt;()','new ConcurrentSkipListMap&lt;&gt;()')};</template><template autoinsert\="true" context\="java" deleted\="false" description\="new NavigableSet" enabled\="true" name\="nnse">${expr\:link('new TreeSet&lt;&gt;()', 'new ConcurrentSkipListSet&lt;&gt;()')};</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;p&gt;Note\: ...&lt;/p&gt;" enabled\="true" name\="note">&lt;p&gt;Note\: ${cursor}&lt;/p&gt;</template><template autoinsert\="true" context\="java" deleted\="false" description\="NavigableSet" enabled\="true" name\="nse">NavigableSet&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt;</template><template autoinsert\="true" context\="java" deleted\="false" description\="new Set" enabled\="true" name\="nse">${expr\:link('new HashSet&lt;&gt;()','new LinkedHashSet&lt;&gt;()','new TreeSet&lt;&gt;()', 'EnumSet.')};</template><template autoinsert\="true" context\="java" deleted\="false" description\="new SortedMap" enabled\="true" name\="nsm">${expr\:link('new TreeMap&lt;&gt;()','new ConcurrentSkipListMap&lt;&gt;()')};</template><template autoinsert\="true" context\="java" deleted\="false" description\="new SortedSet" enabled\="true" name\="nsse">${expr\:link('new TreeSet&lt;&gt;()', 'new ConcurrentSkipListSet&lt;&gt;()')};</template><template autoinsert\="true" context\="java" deleted\="false" description\="Object" enabled\="true" name\="O">Object</template><template autoinsert\="true" context\="java" deleted\="false" description\="or" enabled\="true" name\="or">|| (${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="private" enabled\="true" name\="p">private</template><template autoinsert\="true" context\="java" deleted\="false" description\="define parameter" enabled\="true" name\="p">${paramType\:link(String,int,long,double,float,short,byte,boolean,char,Boolean,Integer,Long,Double,Float,Short,Byte,Character,Object)} ${newName}</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="&lt;p&gt;&lt;/p&gt;" enabled\="true" name\="p">&lt;p&gt;${cursor}&lt;/p&gt;</template><template autoinsert\="true" context\="java" deleted\="false" description\="public" enabled\="true" name\="P">public</template><template autoinsert\="true" context\="java" deleted\="false" description\="@Access" enabled\="true" name\="pa">@Access(${accessType\:link(FIELD,PROPERTY)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private boolean field" enabled\="true" name\="pb">private boolean ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Basic" enabled\="true" name\="pb">@Basic(fetch \= ${fetchType\:link(LAZY,EAGER)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private boolean field" enabled\="true" name\="pb">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate boolean ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private BigDecimal field" enabled\="true" name\="pBd">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate BigDecimal ${field};</template><template autoinsert\="true" context\="java" deleted\="false" description\="private BigDecimal field" enabled\="true" name\="pBd">private BigDecimal ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private byte field" enabled\="true" name\="pby">private byte ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private char field" enabled\="true" name\="pc">private char ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column" enabled\="true" name\="pc">@Column(name \= "${column}", nullable \= ${nullable\:link(false, true)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private char field" enabled\="true" name\="pc">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate char ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private Collection field" enabled\="true" name\="pco">Collection&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private double field" enabled\="true" name\="pd">private double ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private double field" enabled\="true" name\="pd">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate double ${field};</template><template autoinsert\="true" context\="java" deleted\="false" description\="@DiscriminatorColumn" enabled\="true" name\="pdc">@DiscriminatorColumn(name\="TYPE", discriminatorType \= ${discriminatorType\:link(STRING,CHAR,INTEGER)})</template><template autoinsert\="true" context\="java" deleted\="false" description\="public default method" enabled\="true" name\="Pdm">public default ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character)} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="@DiscriminatorValue" enabled\="true" name\="pdv">@DiscriminatorValue("${cursor}")</template><template autoinsert\="true" context\="java" deleted\="false" description\="protected" enabled\="true" name\="pe">protected</template><template autoinsert\="true" context\="java" deleted\="false" description\="@Entity" enabled\="true" name\="pe">@Entity</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Enumerated" enabled\="true" name\="pe">@Enumerated(${enumType\:link(ORDINAL,STRING)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Embeddable" enabled\="true" name\="pe">@Embeddable</template><template autoinsert\="true" context\="java" deleted\="false" description\="@Entity + @Table" enabled\="true" name\="pe">@Entity\n@Table(name \= "${enclosing_type}")</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="protected static method" enabled\="true" name\="pesm">protected static ${returnType\:link(void,boolean,String,int,long,double,float,short,byte,char,Integer,Long,Double,Float, Short, Byte, Character,Object)} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private float field" enabled\="true" name\="pf">private float ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private float field" enabled\="true" name\="pf">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate float ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private field" enabled\="true" name\="pf">private ${type\:link(String,int,long,double,float,short,byte,boolean,char,Boolean,Integer,Long,Double,Float,Short,Byte,Character,Object)} ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private field" enabled\="true" name\="pf">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate ${type\:link(String,int,long,double,float,short,byte,boolean,char,Boolean,Integer,Long,Double,Float,Short,Byte,Character,Object)} ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@GeneratedValue" enabled\="true" name\="pg">@GeneratedValue(strategy \= ${generationType\:link(IDENTITY,SEQUENCE,TABLE,AUTO)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private int field" enabled\="true" name\="pi">private int ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Id + @Column + @GeneratedValue" enabled\="true" name\="pi">@Id\n@Column(name \= "ID")\n@GeneratedValue(strategy \= ${generationType\:link(IDENTITY,SEQUENCE,TABLE,AUTO)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Id" enabled\="true" name\="pi">@Id</template><template autoinsert\="true" context\="java" deleted\="false" description\="@Inheritance" enabled\="true" name\="pi">@Inheritance(strategy \= ${accessType\:link(JOINED,SINGLE_TABLE,TABLE_PER_CLASS)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Id + @Column + @GeneratedValue + field" enabled\="true" name\="pi">@Id\n@Column(name \= "ID")\n@GeneratedValue(strategy \= ${generationType\:link(IDENTITY,SEQUENCE,TABLE,AUTO)})\nprivate long id;</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private int field" enabled\="true" name\="pi">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate int ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@JoinColumn" enabled\="true" name\="pjc">@JoinColumn(name \= "FK_${column}", nullable \= ${nullable\:link(false,true)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@JoinTable" enabled\="true" name\="pjt">@JoinTable(name \= "${joinTable}", joinColumns \= @JoinColumn(name \= "FK_${column1}", nullable \= ${nullable1\:link(false,true)}), inverseJoinColumns \= @JoinColumn(name \= "FK_${column2}", nullable \= ${nullable2\:link(false,true)}))</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private long field" enabled\="true" name\="pl">private long ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Lob" enabled\="true" name\="pl">@Lob</template><template autoinsert\="true" context\="java" deleted\="false" description\="private List field" enabled\="true" name\="pli">private List&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private Map field" enabled\="true" name\="pm">private Map&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@ManyToMany" enabled\="true" name\="pmm">@ManyToMany(fetch \= ${fetchType\:link(LAZY,EAGER)}, cascade \= ${cursor})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@ManyToOne" enabled\="true" name\="pmo">@ManyToOne(optional \= ${optional\:link(false,true)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private NavigableMap field" enabled\="true" name\="pnm">private NavigableMap&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private NavigableSet field" enabled\="true" name\="pnse">private NavigableSet&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character, Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@OneToMany" enabled\="true" name\="pom">@OneToMany(fetch \= ${fetchType\:link(LAZY,EAGER)}, orphanRemoval \= ${orphanRemoval\:link(true,false)}, mappedBy \= "${relationshipField}")</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@OneToOne" enabled\="true" name\="poo">@OneToOne(optional \= ${optional\:link(false,true)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private short field" enabled\="true" name\="ps">private short ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private short field" enabled\="true" name\="ps">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate short ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private static" enabled\="true" name\="ps">private static ${cursor}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private String field" enabled\="true" name\="pS">private String ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Column + private String field" enabled\="true" name\="pS">@Column(name \= "${field}", nullable \= ${nullable\:link(false, true)})\nprivate String ${field};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private Set field" enabled\="true" name\="pse">private Set&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character, Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private static final" enabled\="true" name\="psf">private static final ${cursor}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="public static final" enabled\="true" name\="Psf">public static final ${cursor}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private SortedMap field" enabled\="true" name\="psm">private SortedMap&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="private SortedSet field" enabled\="true" name\="psse">private SortedSet&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character, Object,'?','? extends ','? super ')}&gt; ${newName};</template><template autoinsert\="true" context\="java" deleted\="false" description\="@Table" enabled\="true" name\="pt">@Table(name \= "${enclosing_type}")</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Temporal" enabled\="true" name\="pt">@Temporal(${temporalType\:link(DATE,TIME,TIMESTAMP)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Transient" enabled\="true" name\="pt">@Transient</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="return" enabled\="true" name\="r">return ${cursor}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="return false" enabled\="true" name\="rf">return false;</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="return id" enabled\="true" name\="rid">return id;</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="return null" enabled\="true" name\="rn">return null;</template><template autoinsert\="true" context\="java" deleted\="false" description\="require not null" enabled\="true" name\="rnn">requireNonNull(${localVar});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="return true" enabled\="true" name\="rt">return true;</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="return this" enabled\="true" name\="rth">return this;</template><template autoinsert\="true" context\="java" deleted\="false" description\="String" enabled\="true" name\="S">String</template><template autoinsert\="true" context\="java" deleted\="false" description\="@Autowired" enabled\="true" name\="sa">@Autowired</template><template autoinsert\="true" context\="java" deleted\="false" description\="@Controller" enabled\="true" name\="sc">@Controller</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="static class" enabled\="true" name\="sc">${visibility\:link('public ','protected ','private ','')}static class ${newName} {\n\n\t${cursor}\n\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="Comparator" enabled\="true" name\="sc">public static final Comparator&lt;${enclosing_type}&gt; COMPARATOR \= nullsLast(comparing(${enclosing_type}\:\:${cursor}));</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping DELETE" enabled\="true" name\="sdr">@RequestMapping(value \= "${cursor}", method \= DELETE)</template><template autoinsert\="true" context\="java" deleted\="false" description\="Set" enabled\="true" name\="se">Set&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt;</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping GET" enabled\="true" name\="sgr">@RequestMapping(value \= "${cursor}", method \= GET)</template><template autoinsert\="true" context\="java" deleted\="false" description\="short" enabled\="true" name\="sh">short</template><template autoinsert\="true" context\="java" deleted\="false" description\="Short" enabled\="true" name\="Sh">Short</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping HEAD" enabled\="true" name\="shr">@RequestMapping(value \= "${cursor}", method \= HEAD)</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="static interface" enabled\="true" name\="si">${visibility\:link('public ','protected ','private ','')}static interface ${newName} {\n\n\t${cursor}\n\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="SortedMap" enabled\="true" name\="sm">SortedMap&lt;${keyType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}, ${valueType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt;</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping OPTIONS" enabled\="true" name\="sor">@RequestMapping(value \= "${cursor}", method \= OPTIONS)</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping POST" enabled\="true" name\="spr">@RequestMapping(value \= "${cursor}", method \= POST)</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping PUT" enabled\="true" name\="spr">@RequestMapping(value \= "${cursor}", method \= PUT)</template><template autoinsert\="true" context\="java" deleted\="false" description\="@PathVariable" enabled\="true" name\="spv">@PathVariable("${cursor}")</template><template autoinsert\="true" context\="java" deleted\="false" description\="@PathVariable + parameter" enabled\="true" name\="spv">@PathVariable("${path}") ${paramType\:link(String,int,long,double,float,short,byte,boolean,char,Boolean,Integer,Long,Double,Float,Short,Byte,Character,Object)} ${newName}</template><template autoinsert\="true" context\="java" deleted\="false" description\="@Qualifier" enabled\="true" name\="sq">@Qualifier("${cursor}")</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping" enabled\="true" name\="sr">@RequestMapping("${cursor}")</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping" enabled\="true" name\="sr">@RequestMapping(${cursor})</template><template autoinsert\="true" context\="java" deleted\="false" description\="@RequestParam + parameter" enabled\="true" name\="srp">@RequestParam("${param}") ${paramType\:link(String,int,long,double,float,short,byte,boolean,char,Boolean,Integer,Long,Double,Float,Short,Byte,Character,Object)} ${newName}</template><template autoinsert\="true" context\="java" deleted\="false" description\="@RequestParam" enabled\="true" name\="srp">@RequestParam("${cursor}")</template><template autoinsert\="true" context\="java" deleted\="false" description\="SortedSet" enabled\="true" name\="sse">SortedSet&lt;${itemType\:link(String,Boolean,Integer,Long,Double,Float, Short, Byte, Character,Object,'?','? extends ','? super ')}&gt;</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="static" enabled\="true" name\="st">static</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="static block code" enabled\="true" name\="stb">static {\n\t${cursor}\n}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@RequestMapping TRACE" enabled\="true" name\="str">@RequestMapping(value \= "${cursor}", method \= TRACE)</template><template autoinsert\="true" context\="java" deleted\="false" description\="synchronized" enabled\="true" name\="sync">synchronized</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="print (&quot;variableName \= &quot; + variableValue) to standard out" enabled\="true" name\="sysout">System.out.println("${localVar} \= " + ${localVar});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="print (variableValue) to standard out" enabled\="true" name\="sysout">System.out.println(${localVar});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="printf (&quot;variableName \= &quot;, variableValue) to standard out" enabled\="true" name\="sysout">System.out.printf("${localVar} \= %s\\n", ${localVar});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="print (&quot;&quot;) to standard out" enabled\="true" name\="sysout">System.out.println("${cursor}");</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="true" enabled\="true" name\="t">true</template><template autoinsert\="true" context\="java" deleted\="false" description\="Type" enabled\="true" name\="t">${type\:link(String,int,long,double,float,short,byte,boolean,char,Boolean,Integer,Long,Double,Float,Short,Byte,Character,Object, '?','? extends ','? super ')}</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="ToString" enabled\="true" name\="ts">private static final Function&lt;${enclosing_type}, String&gt; TO_STRING \= ToStringBuilder.of(${enclosing_type}.class).build();\n\n@Override\npublic String toString() {\n\treturn TO_STRING.apply(this);\n}</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="throw new" enabled\="true" name\="tw">throw new ${elemType}(${cursor});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="throw new IllegalArgumentException" enabled\="true" name\="twi">throw new IllegalArgumentException(${cursor});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="throw new NullPointerException" enabled\="true" name\="twn">throw new NullPointerException(${cursor});</template><template autoinsert\="true" context\="java-statements" deleted\="false" description\="throw new RuntimeException" enabled\="true" name\="twr">throw new RuntimeException(${cursor});</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="throws" enabled\="true" name\="tws">throws</template><template autoinsert\="true" context\="java" deleted\="false" description\="throw new UnsupportedOperationException" enabled\="true" name\="twu">throw new UnsupportedOperationException(${cursor});</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@AssertFalse" enabled\="true" name\="vaf">@AssertFalse</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@AssertTrue" enabled\="true" name\="vat">@AssertTrue</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@CNPJ" enabled\="true" name\="vcnpj">@CNPJ</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@CPF" enabled\="true" name\="vcpf">@CPF</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Digits" enabled\="true" name\="vd">@Digits(integer \= ${integer\:link(1,2,3,4,5,6,7,8,9,10)}, fraction \= ${fraction\:link(1,2,3,4,5,6,7,8,9,10)})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@DecimalMax" enabled\="true" name\="vdma">@DecimalMax(value \= "${cursor}")</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@DecimalMin" enabled\="true" name\="vdmi">@DecimalMin(value \= "${cursor}")</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Email" enabled\="true" name\="ve">@Email</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Future" enabled\="true" name\="vf">@Future</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Max" enabled\="true" name\="vma">@Max(${cursor})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Min" enabled\="true" name\="vmi">@Min(0${cursor})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Null" enabled\="true" name\="vn">@Null</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@NotNull" enabled\="true" name\="vnn">@NotNull</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Past" enabled\="true" name\="vp">@Past</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Pattern" enabled\="true" name\="vp">@Pattern(regexp \= "${cursor}")</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Size" enabled\="true" name\="vs">@Size(max \= ${cursor})</template><template autoinsert\="true" context\="java-members" deleted\="false" description\="@Size" enabled\="true" name\="vs">@Size(min \= 1, max \= ${cursor})</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jdt.ui.visibility.order=B,R,D,V,
outlinesortoption=SF,F,SI,SM,I,C,M,T,
sourceHoverBackgroundColor=251,234,160
sp_cleanup.add_default_serial_version_id=true
sp_cleanup.add_generated_serial_version_id=false
sp_cleanup.add_missing_annotations=true
sp_cleanup.add_missing_deprecated_annotations=true
sp_cleanup.add_missing_methods=false
sp_cleanup.add_missing_nls_tags=false
sp_cleanup.add_missing_override_annotations=true
sp_cleanup.add_missing_override_annotations_interface_methods=true
sp_cleanup.add_serial_version_id=false
sp_cleanup.always_use_blocks=true
sp_cleanup.always_use_parentheses_in_expressions=false
sp_cleanup.always_use_this_for_non_static_field_access=false
sp_cleanup.always_use_this_for_non_static_method_access=false
sp_cleanup.convert_functional_interfaces=true
sp_cleanup.convert_to_enhanced_for_loop=true
sp_cleanup.correct_indentation=true
sp_cleanup.format_source_code=true
sp_cleanup.format_source_code_changes_only=false
sp_cleanup.insert_inferred_type_arguments=false
sp_cleanup.make_local_variable_final=true
sp_cleanup.make_parameters_final=false
sp_cleanup.make_private_fields_final=true
sp_cleanup.make_type_abstract_if_missing_method=false
sp_cleanup.make_variable_declarations_final=true
sp_cleanup.never_use_blocks=false
sp_cleanup.never_use_parentheses_in_expressions=true
sp_cleanup.on_save_use_additional_actions=true
sp_cleanup.organize_imports=true
sp_cleanup.qualify_static_field_accesses_with_declaring_class=false
sp_cleanup.qualify_static_member_accesses_through_instances_with_declaring_class=true
sp_cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class=true
sp_cleanup.qualify_static_member_accesses_with_declaring_class=true
sp_cleanup.qualify_static_method_accesses_with_declaring_class=false
sp_cleanup.remove_private_constructors=true
sp_cleanup.remove_redundant_type_arguments=true
sp_cleanup.remove_trailing_whitespaces=true
sp_cleanup.remove_trailing_whitespaces_all=true
sp_cleanup.remove_trailing_whitespaces_ignore_empty=false
sp_cleanup.remove_unnecessary_casts=true
sp_cleanup.remove_unnecessary_nls_tags=true
sp_cleanup.remove_unused_imports=true
sp_cleanup.remove_unused_local_variables=false
sp_cleanup.remove_unused_private_fields=true
sp_cleanup.remove_unused_private_members=false
sp_cleanup.remove_unused_private_methods=true
sp_cleanup.remove_unused_private_types=true
sp_cleanup.sort_members=true
sp_cleanup.sort_members_all=false
sp_cleanup.use_anonymous_class_creation=false
sp_cleanup.use_blocks=true
sp_cleanup.use_blocks_only_for_return_and_throw=false
sp_cleanup.use_lambda=true
sp_cleanup.use_parentheses_in_expressions=true
sp_cleanup.use_this_for_non_static_field_access=true
sp_cleanup.use_this_for_non_static_field_access_only_if_necessary=true
sp_cleanup.use_this_for_non_static_method_access=true
sp_cleanup.use_this_for_non_static_method_access_only_if_necessary=true
spelling_ignore_ampersand_in_properties=true
spelling_ignore_digits=true
spelling_ignore_java_strings=true
spelling_ignore_mixed=true
spelling_ignore_non_letters=true
spelling_ignore_sentence=true
spelling_ignore_single_letters=true
spelling_ignore_upper=true
spelling_ignore_urls=true
spelling_locale_initialized=true
spelling_user_dictionary_encoding=
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
